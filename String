String 
		
		String x="Rahul Pawar";
		1->String is non primitive data type beacuse size is not fix
		2->String is sequence(array) of characters
		3->String is a class and is Syntax "Public final class String extend Object class"
		4-> Three class in String 
                String , Buffer and Bulider
		*What is string Constant pool /String Literal Pool*
                Whenever you create a string object using string literal, that object is stored in the string constant pool and whenever you create a string object using          
		new keyword, such object is stored in the heap memory.
		Special Memory location 
		Method
		Heap  -> String Constant Pool (SCP)
		Stack flow
		PC registor 
		Native memory 
		New key word creat the new Object creat 
		Memoery allocation done in Heap Area
		String s1=new String("Deepak"); //With new key word Two memory address created in String Literal Pool 
		String s2="Rahul";		//One heap Memory address created

		String 
		String is object contains charter special , charter and numbers. String is immutable , String is slow and consume the memory 		
		String 						Buffer				Builder
		immutable 					mutable				mutable	
		StringConstantpool/heap				heap				heap
		Non synchronized 				synchronized			Non Synchronized
		thread safe beacuse it is immutable		thread safe			Not thread safe
		slow						fast than string 		faster than buffer
		high memory if change the 			low Memory 			Low Memory 
		
		when ever any operation is created on the any string object then it will creat a new object and do not change the old object. 
		https://www.youtube.com/watch?v=4cEsJtuW4YY
				
		four ways to write the String
	 	String s1="Hello";
		String s2=new String("Hello");
		StringBuffer s3=new String("Hello");
		StringBuilder s4=new String("Hello");
		String x="*#*&#123asdh";

/---------------------------------------------------------------------------------------/
		String x="Rahul!^#*$123";
		
		char[] a=x.toCharArray();
		
		for(int i=0; i<a.length; i++)
		{
			if(Character.isAlphabetic(a[i]))
			{
			System.out.println(a[i]);
			}
		}
		for(int j=0; j<a.length; j++)
		{
			if(!(Character.isAlphabetic(a[j])|(Character.isDigit(a[j]))))
					System.out.print(a[j]);
		}

/---------------------------------------------------------------------------------/
		//Reverse the string 

		String y="Rahul";
		char[] b=y.toCharArray();
		for(int l=b.length-1; l>=0; l--)
		{
			System.out.print(b[l]);
		}
/-------------------------------------------------------------------------------/

		String a="rahul";
		for (int i=0; i<a.length(); i++)
		{
		if(i%2==0){
		char x=a.toUpperCase().charAt(i);
		System.out.print(x);
		}
		else{
		char x=a.toLowerCase().charAt(i);
		System.out.print(x);
		}
		}

/-------------------------------------------------------------------------------/

	String x="Cucumber";
	
	System.out.println(x.substring(3,5));
	System.out.println(x.substring(0,5));
	System.out.println(x.substring(3,6));

/-------------------------------------------------------------------------------/

	String x="Cucumber";
	
	for(int i=0; i<=x.length(); i++)
	{
		System.out.println(x.substring(0,i));
	}
